<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="DELETE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Home">618ae55b2b4a5210eec1fdb36e91bf14</macroponent>
        <name>New client script 1</name>
        <preset/>
        <required_translations>[]</required_translations>
        <script><![CDATA[
/**
* @param {params} params
* @param {api} params.api
* @param {any} params.event
* @param {any} params.imports
* @param {ApiHelpers} params.helpers
*/

function calculateDuration({ state }) {
    const startDate = state.from; // Client state for start date
    const endDate = state.to;     // Client state for end date

    if (!startDate || !endDate) {
        // If either date is missing, clear duration and exit
        state.duration = null;
        return;
    }

    // Parse the dates
    const start = new Date(startDate);
    const end = new Date(endDate);

    // Validate the dates
    if (isNaN(start.getTime()) || isNaN(end.getTime())) {
        state.duration = null; // Clear duration on invalid dates
        return;
    }

    // Calculate the difference in days
    const differenceInMs = end - start;
    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));

    // Store the duration in days
    state.duration = differenceInDays;
}

// Ensure the script runs when either startDate or endDate changes
export default {
    observe: ['startDate', 'endDate'],
    action: calculateDuration,
};]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-03 21:19:17</sys_created_on>
        <sys_id>3caf9ff82b1a9e10a7a0ff61de91bf5e</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>New client script 1</sys_name>
        <sys_package display_value="Rent Assist" source="x_snc_rent_assist">8c0fd1db2bc65210eec1fdb36e91bfc0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Rent Assist">8c0fd1db2bc65210eec1fdb36e91bfc0</sys_scope>
        <sys_update_name>sys_ux_client_script_3caf9ff82b1a9e10a7a0ff61de91bf5e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-03 21:20:09</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Rent Assist">8c0fd1db2bc65210eec1fdb36e91bfc0</application>
        <file_path/>
        <instance_id>110c242aebc296983a48f459bad0cd6a</instance_id>
        <instance_name>democreatorwf92220</instance_name>
        <name>sys_ux_client_script_3caf9ff82b1a9e10a7a0ff61de91bf5e</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ux_client_script"&gt;&lt;sys_ux_client_script action="INSERT_OR_UPDATE"&gt;&lt;controller_preset/&gt;&lt;includes/&gt;&lt;macroponent display_value="Home"&gt;618ae55b2b4a5210eec1fdb36e91bf14&lt;/macroponent&gt;&lt;name&gt;New client script 1&lt;/name&gt;&lt;preset/&gt;&lt;required_translations&gt;[]&lt;/required_translations&gt;&lt;script&gt;&lt;![CDATA[
/**
* @param {params} params
* @param {api} params.api
* @param {any} params.event
* @param {any} params.imports
* @param {ApiHelpers} params.helpers
*/

function calculateDuration({ state }) {
    const startDate = state.from; // Client state for start date
    const endDate = state.to;     // Client state for end date

    if (!startDate || !endDate) {
        // If either date is missing, clear duration and exit
        state.duration = null;
        return;
    }

    // Parse the dates
    const start = new Date(startDate);
    const end = new Date(endDate);

    // Validate the dates
    if (isNaN(start.getTime()) || isNaN(end.getTime())) {
        state.duration = null; // Clear duration on invalid dates
        return;
    }

    // Calculate the difference in days
    const differenceInMs = end - start;
    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));

    // Store the duration in days
    state.duration = differenceInDays;
}

// Ensure the script runs when either startDate or endDate changes
export default {
    observe: ['startDate', 'endDate'],
    action: calculateDuration,
};]]&gt;&lt;/script&gt;&lt;script_api_version&gt;2.0.0&lt;/script_api_version&gt;&lt;sys_class_name&gt;sys_ux_client_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-12-03 21:19:17&lt;/sys_created_on&gt;&lt;sys_id&gt;3caf9ff82b1a9e10a7a0ff61de91bf5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;New client script 1&lt;/sys_name&gt;&lt;sys_package display_value="Rent Assist" source="x_snc_rent_assist"&gt;8c0fd1db2bc65210eec1fdb36e91bfc0&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Rent Assist"&gt;8c0fd1db2bc65210eec1fdb36e91bfc0&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ux_client_script_3caf9ff82b1a9e10a7a0ff61de91bf5e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-12-03 21:20:09&lt;/sys_updated_on&gt;&lt;target&gt;macroponent&lt;/target&gt;&lt;type&gt;default&lt;/type&gt;&lt;/sys_ux_client_script&gt;&lt;/record_update&gt;</payload>
        <payload_hash>109530659</payload_hash>
        <record_name>New client script 1</record_name>
        <reverted_from/>
        <source>cc0fd1db2bc65210eec1fdb36e91bfc3</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-03 21:20:09</sys_created_on>
        <sys_id>76516f302b5a9e10a7a0ff61de91bff1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1938e65143e0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-03 21:20:09</sys_updated_on>
        <type>UX Client Script</type>
        <update_guid>ba516f30b25a9e1099975840e46229f0</update_guid>
        <update_guid_history>ba516f30b25a9e1099975840e46229f0:109530659,9221af30db5a9e1094043cc72dc8c402:117275940</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-03 21:22:33</sys_created_on>
        <sys_db_object display_value="" name="sys_ux_client_script">sys_ux_client_script</sys_db_object>
        <sys_id>0ae15554dbc54e02970d256269a23ec4</sys_id>
        <sys_metadata>3caf9ff82b1a9e10a7a0ff61de91bf5e</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>New client script 1</sys_name>
        <sys_package display_value="Rent Assist" source="x_snc_rent_assist">8c0fd1db2bc65210eec1fdb36e91bfc0</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Rent Assist">8c0fd1db2bc65210eec1fdb36e91bfc0</sys_scope>
        <sys_scope_delete display_value="">b54cd95fbdaa453089ff6aab3af1a6b1</sys_scope_delete>
        <sys_update_name>sys_ux_client_script_3caf9ff82b1a9e10a7a0ff61de91bf5e</sys_update_name>
        <sys_update_version display_value="sys_ux_client_script_3caf9ff82b1a9e10a7a0ff61de91bf5e">76516f302b5a9e10a7a0ff61de91bff1</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-03 21:22:33</sys_updated_on>
    </sys_metadata_delete>
</record_update>
